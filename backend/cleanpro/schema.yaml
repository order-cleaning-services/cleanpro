openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/users/:
    get:
      operationId: listUsers
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomUser'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
  /api/users/me/:
    get:
      operationId: meUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: meUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: meUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: meUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/users/{id}/:
    get:
      operationId: retrieveUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/users/{id}/orders/:
    get:
      operationId: ordersUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u0437\u0430\u043A\u0430\u0437\
        \u043E\u0432 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\
        \u044F."
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
      tags:
      - api
  /api/orders/:
    get:
      operationId: listOrders
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u0437\u0430\u043A\u0430\u0437\
        \u043E\u0432."
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/GetOrder'
          description: ''
      tags:
      - api
    post:
      operationId: createOrder
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u0437\u0430\u043A\u0430\u0437\
        \u043E\u0432."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GetOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GetOrder'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrder'
          description: ''
      tags:
      - api
  /api/orders/{id}/:
    get:
      operationId: retrieveOrder
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u0437\u0430\u043A\u0430\u0437\
        \u043E\u0432."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrder'
          description: ''
      tags:
      - api
    put:
      operationId: updateOrder
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u0437\u0430\u043A\u0430\u0437\
        \u043E\u0432."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GetOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GetOrder'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrder'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOrder
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u0437\u0430\u043A\u0430\u0437\
        \u043E\u0432."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GetOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GetOrder'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrder'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyOrder
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u0437\u0430\u043A\u0430\u0437\
        \u043E\u0432."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/ratings/:
    get:
      operationId: listRatings
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043E\u0442\u0437\u044B\u0432\
        \u043E\u0432."
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
    post:
      operationId: createRating
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043E\u0442\u0437\u044B\u0432\
        \u043E\u0432."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
  /api/ratings/{id}/:
    get:
      operationId: retrieveRating
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043E\u0442\u0437\u044B\u0432\
        \u043E\u0432."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this rating.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
    put:
      operationId: updateRating
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043E\u0442\u0437\u044B\u0432\
        \u043E\u0432."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this rating.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRating
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043E\u0442\u0437\u044B\u0432\
        \u043E\u0432."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this rating.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRating
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043E\u0442\u0437\u044B\u0432\
        \u043E\u0432."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this rating.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/orders/{order_id}/rating/:
    get:
      operationId: listRatings
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043E\u0442\u0437\u044B\u0432\
        \u043E\u0432."
      parameters:
      - name: order_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
    post:
      operationId: createRating
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043E\u0442\u0437\u044B\u0432\
        \u043E\u0432."
      parameters:
      - name: order_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
  /api/orders/{order_id}/rating/{id}/:
    get:
      operationId: retrieveRating
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043E\u0442\u0437\u044B\u0432\
        \u043E\u0432."
      parameters:
      - name: order_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this rating.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
    put:
      operationId: updateRating
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043E\u0442\u0437\u044B\u0432\
        \u043E\u0432."
      parameters:
      - name: order_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this rating.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRating
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043E\u0442\u0437\u044B\u0432\
        \u043E\u0432."
      parameters:
      - name: order_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this rating.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRating
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043E\u0442\u0437\u044B\u0432\
        \u043E\u0432."
      parameters:
      - name: order_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this rating.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/auth/token/login/:
    post:
      operationId: createTokenCreate
      description: Use this endpoint to obtain user authentication token.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
      tags:
      - api
  /api/auth/token/logout/:
    post:
      operationId: createTokenDestroy
      description: Use this endpoint to logout user (remove user authentication token).
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/users/activation/:
    post:
      operationId: activationUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - api
  /api/users/resend_activation/:
    post:
      operationId: resendActivationUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_password/:
    post:
      operationId: resetPasswordUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/users/reset_email/:
    post:
      operationId: resetUsernameUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_email_confirm/:
    post:
      operationId: resetUsernameConfirmUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - api
  /api/users/set_password/:
    post:
      operationId: setPasswordUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
      tags:
      - api
  /api/users/set_email/:
    post:
      operationId: setUsernameUser
      description: "\u0421\u043F\u0438\u0441\u043E\u043A \u043F\u043E\u043B\u044C\u0437\
        \u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - api
  /api/order_create/:
    post:
      operationId: createorder_create
      description: "\u0421\u043E\u0437\u0434\u0430\u0442\u044C \u0437\u0430\u043A\u0430\
        \u0437."
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/confirm_mail/:
    post:
      operationId: createconfirm_mail
      description: "\u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044C\
        \ \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0443\u044E \u043F\
        \u043E\u0447\u0442\u0443."
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/get_token/:
    post:
      operationId: createget_token
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/orders/{id}/cancell/:
    patch:
      operationId: cancellOrder
      description: "\u041E\u0442\u043C\u0435\u043D\u0438\u0442\u044C \u0437\u0430\u043A\
        \u0430\u0437."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GetOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GetOrder'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrder'
          description: ''
      tags:
      - api
  /api/orders/{id}/change_datetime/:
    patch:
      operationId: changeDatetimeOrder
      description: "\u041F\u0435\u0440\u0435\u043D\u0435\u0441\u0442\u0438 \u0437\u0430\
        \u043A\u0430\u0437."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GetOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GetOrder'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrder'
          description: ''
      tags:
      - api
  /api/orders/{id}/change_status/:
    patch:
      operationId: changeStatusOrder
      description: "\u0418\u0437\u043C\u0435\u043D\u0438\u0442\u044C \u0441\u0442\u0430\
        \u0442\u0443\u0441 \u0437\u0430\u043A\u0430\u0437\u0430."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GetOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GetOrder'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrder'
          description: ''
      tags:
      - api
  /api/orders/{id}/comment/:
    patch:
      operationId: commentOrder
      description: "\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043A\u043E\u043C\
        \u043C\u0435\u043D\u0442\u0430\u0440\u0438\u0439 \u043A \u0437\u0430\u043A\
        \u0430\u0437\u0443."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GetOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GetOrder'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrder'
          description: ''
      tags:
      - api
  /api/orders/{id}/pay/:
    patch:
      operationId: payOrder
      description: "\u041E\u043F\u043B\u0430\u0442\u0438\u0442\u044C \u0437\u0430\u043A\
        \u0430\u0437."
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GetOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GetOrder'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrder'
          description: ''
      tags:
      - api
components:
  schemas:
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 256
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 128
        adress:
          type: integer
          nullable: true
      required:
      - email
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
    GetOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            first_name:
              type: string
              maxLength: 256
            email:
              type: string
              format: email
              maxLength: 254
            phone:
              type: string
              maxLength: 128
            adress:
              type: integer
              nullable: true
          required:
          - email
          readOnly: true
        adress:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            city:
              type: string
              maxLength: 256
            street:
              type: string
              maxLength: 256
            house:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
            apartment:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
              nullable: true
            floor:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
              nullable: true
            entrance:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
              nullable: true
          required:
          - city
          - street
          - house
          readOnly: true
        service_package:
          type: object
          properties:
            title:
              enum:
              - maintenance
              - general
              - repair
              - holiday
              - windows
              type: string
            price:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
          readOnly: true
        total_sum:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comment:
          type: string
          nullable: true
        order_status:
          enum:
          - created
          - accepted
          - finished
          - cancelled
          type: string
        pay_status:
          type: boolean
        creation_date:
          type: string
          format: date
          readOnly: true
        creation_time:
          type: string
          readOnly: true
        cleaning_date:
          type: string
          format: date
        cleaning_time:
          type: string
      required:
      - cleaning_date
      - cleaning_time
    Rating:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            first_name:
              type: string
              maxLength: 256
            email:
              type: string
              format: email
              maxLength: 254
            phone:
              type: string
              maxLength: 128
            adress:
              type: integer
              nullable: true
          required:
          - email
          readOnly: true
        pub_date:
          type: string
          format: date-time
          readOnly: true
        text:
          type: string
        score:
          type: integer
          maximum: 5
          minimum: 1
        order:
          type: string
          readOnly: true
      required:
      - text
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          maxLength: 254
      required:
      - new_email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          maxLength: 254
      required:
      - current_password
      - new_email
